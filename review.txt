Review 10/09/2022

1. web.php : 
    Correction du dysfonctionnement du middleware 'what' et utilisation des méthodes name(), controller(), prefix() sur les routes groupées (Voir les dernières routes, celles concernant le customer).
2. middleware IsWhat : 
    - Il faudra changer ce nom pour le remplacer par un autre plus parlant (exemple: CheckRole/CheckUserRole/CheckAuthRole et l'enregistrer tout simplement 'role' dans Kernel.php);
    * Toujours penser à retourner des messages compréhensifs à l'utilisateur (lorsque l'on le redirige vers un autre espace tout simplement il ne comprend pas ce qu'il s'est passé. Raison pour laquelle j'ai ajouté un message dans le abort(). Tu pourrais, avec ce que tu as fait, ajouter un message flash pour régler ce souci).
3. UserController :
    - Refactoring de la méthode signup();
    - Changer le package de messages flash;
    * Lorsque l'on crée un compte, on est redirigé vers le formulaire (d'ajout de job pour le customer et de complet du profil pour le freelance);
    * Revue d'une partie de la logique de la methode authenticate() (Principalement l'utilisation de quelques relations Eloquent ecrites dans les Models).

4. ResumeController :
    - méthode resume() : La vérification de l'authentification n'est pas nécessaire à ce niveau, vu qu'il y'a déjà le middleware auth qui le fait (faudra modifier le middleware Authenticate en mettant la route correcte de la vue de connexion 'login.view') + Utilisation de la relation experiences...

5. add-resume.blade :
    - le souci relatif aux old values est en partie réglé pour les urls. Il faudra faire pareil pour les expériences. 
    - (array_filter() a été utilisé pour retirer les valeurs nulles/vides du tableau).

############################################################

20/09/2022

1. UserController - authenticate() : 
    - Utiliser les relations Eloquent pour récupérer les jobs et expériences du customer et du freelance respectivement;
    - Personnaliser la connexion en renvoyant un message spécifique lorsque le compte de l'utilisateur est désactivé.

2. JobController :
    - show() :
        * Documente toi sur le Route Model Binding;
        * Ajoute un champ "slug" à la table jobs, qui sera obtenu à partir du titre du job. Puis il faudra l'utiliser dans l'url à la place de l'id;
        * Tu n'as pas obligatoirement besoin de récupérer les requirements à partir du Model mais à partir de la relation Eloquent;
    - index() :
        * La pagination ne fonctionne pas au niveau de la vue;
        * Pourquoi avoir passé deux variables (job et job2) à la vue?
    - store() - Validation :
        * Conserver les old values pour les champs "Job type", "Category" et "Tags" en cas d'erreur;
        * Tous les "requirements" ne sont pas conservés en cas d'erreur (par exemple lorsqu'il y'en 3 le formulaire revient avec deux valeurs);
        * Chaque "requirement" doit être différent des autres;
        * Revoir les contraintes de dates; "opening date" doit être supérieure ou égale à la date actuelle;
        * Le message d'erreur "The end date must be a date before start date." ne permet pas de savoir où est situé l'erreur vu qu'il n'y a pas de champ "end date" ni "start date" dans le formulaire.
    - Que font les méthodes resume() et browsejob() ?

3. ProfileController :
    - Rajouter le champ email et retirer le status (c'est l'admin qui se charge d'activer et désactiver les comptes utilisateurs);
    - Remplir les champs lorsque les valeurs sont déjà présentes en DB. 